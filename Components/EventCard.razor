@namespace EventEase.Components
@using EventEase_app.Models

<div class="event-card">
    <div class="event-card-header">
        @if (!string.IsNullOrEmpty(EventData.ImageUrl))
        {
            <img src="@EventData.ImageUrl" alt="@EventData.Name" class="event-image" />
        }
        else
        {
            <div class="event-image-placeholder">
                <span>üìÖ</span>
            </div>
        }
    </div>
    
    <div class="event-card-body">
        <h3 class="event-title">@EventData.Name</h3>
        <div class="event-details">
            <div class="event-date">
                <span class="icon">üìÖ</span>
                <span>@EventData.Date.ToString("MMM dd, yyyy")</span>
            </div>
            <div class="event-location">
                <span class="icon">üìç</span>
                <span>@EventData.Location</span>
            </div>
            @if (EventData.Price > 0)
            {
                <div class="event-price">
                    <span class="icon">üí∞</span>
                    <span>$@EventData.Price.ToString("F2")</span>
                </div>
            }
            else
            {
                <div class="event-price">
                    <span class="icon">üÜì</span>
                    <span>Free</span>
                </div>
            }
        </div>
        
        @if (!string.IsNullOrEmpty(EventData.Description))
        {
            <p class="event-description">@EventData.Description</p>
        }
    </div>
    
    <div class="event-card-footer">
        <button class="btn btn-primary" @onclick="ViewDetails">
            View Details
        </button>
        <button class="btn btn-success" @onclick="RegisterForEvent">
            Register
        </button>
    </div>
</div>

@code {
    [Parameter] public Event EventData { get; set; } = new();
    [Parameter] public EventCallback<int> OnViewDetails { get; set; }
    [Parameter] public EventCallback<int> OnRegister { get; set; }

    private async Task ViewDetails()
    {
        await OnViewDetails.InvokeAsync(EventData.Id);
    }

    private async Task RegisterForEvent()
    {
        await OnRegister.InvokeAsync(EventData.Id);
    }
}

<style>
    .event-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin: 16px 0;
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
        background: white;
    }

    .event-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    .event-card-header {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

    .event-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .event-image-placeholder {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 48px;
        color: white;
    }

    .event-card-body {
        padding: 16px;
    }

    .event-title {
        margin: 0 0 12px 0;
        color: #333;
        font-size: 1.4em;
        font-weight: bold;
    }

    .event-details {
        margin-bottom: 12px;
    }

    .event-date, .event-location, .event-price {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
        color: #666;
    }

    .event-date .icon, .event-location .icon, .event-price .icon {
        margin-right: 8px;
        font-size: 1.1em;
    }

    .event-description {
        color: #666;
        font-size: 0.9em;
        line-height: 1.4;
        margin: 0;
        max-height: 60px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .event-card-footer {
        padding: 16px;
        border-top: 1px solid #eee;
        display: flex;
        gap: 12px;
        background: #f8f9fa;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
        transition: background-color 0.2s;
        flex: 1;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

    .btn-success:hover {
        background-color: #1e7e34;
    }
</style>
